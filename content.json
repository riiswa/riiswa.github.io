{"pages":[{"title":"Who am I ?","text":"Who Are You?My name is Waris Radji, I’m 19 years old, and I presently learning computer science at Université de Paris 13. I have been working at Laboratoire Scientifique de Paris Nord (LIPN - CNRS) as a Scala Developer to implement an unsupervised learning algorithm in the Clustering4Ever library. I’m also a high-level Street Lifting athlete in the Fundamental Strength Project (FSP) team. My goal is to become a doctor in Machine Learning. This is my first blog and I hope you will like it.Why Are You Blogging?I think that knowledge is some things that have to be shared to permit our entire community to evolve. As a very large consumer of blog posts, I feel I even have to share. The best way to know if you have understood a concept is to see if you can explain it.What Are You Going To Be Blogging About?Even if this blog will principally deal with Data Science, Procedural Generation and Programming (mainly in Scala, affirmative it is my favorite language), I would also talk about technology in general, sport (particularly on Street lifting with training methods and statistical analyses) and anything else that comes to mind.Who Are You Writing For?I write for anyone on this planet who has a sense of curiosity and a thirst for learning. I really hope to be able to facilitate beginner developers to be more advanced in their early days. If you feel you’re being targeted by my sentences above, I welcome you!How Can They Get Involved?I am open to all constructive comments, especially in my writing, as I am just starting out. Anyone who desires to write an article on my blog is welcome and feel free to recommend new topics. We’ll all move forward together!","link":"/about/index.html"},{"title":"","text":"Scala collections methods explained using food 😋123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104List(🍗, 🥦, 🍗, 🍗).collect{case 🍗 =&gt; eat(🍗)} = List(🦴, 🦴, 🦴)List(🍗, 🥦, 🍗, 🍗).collectFirst{case 🍗 =&gt; eat(🍗)} = Some(🦴)List(🍓, 🍇).concat(List(🍉, 🍋)) = List(🍓, 🍇, 🍉, 🍋)List(🍎, 🍏).corresponds(List(🍎, 🍏))(_ == _) = trueList(🍎, 🥕, 🍌, 🧅).count(isFruit) = 2List(🍎, 🍏, 🍐, 🥕, 🍊).drop(2) = List(🍐, 🥕, 🍊)List(🍎, 🍏, 🍐, 🥕, 🍊).dropRight(2) = List(🍎, 🍏, 🍐)List(🍎, 🍏, 🍐, 🥕, 🍊).dropWhile(isFruit) = List(🥕, 🍊)List(🍎, 🥕, 🍌, 🧅).empty = List()List(🥑, 🥦, 🍓, 🥬).exists(🍓) = trueList(🍎, 🥕, 🍌, 🧅).filter(isFruit) = List(🍎, 🍌)List(🍎, 🥕, 🍌, 🧅).filterNot(isFruit) = List(🥕, 🧅)List(🥑, 🥦, 🍓, 🥬).find(isFruit) = Some(🍓)List(List(🥦), List(🍏, 🥕), List(🧅)).flatten() = List(🥦, 🍏, 🥕, 🧅)List(🍎, 🍏, 🍐).forall(isFruit) = trueList(🍓, 🥒, 🍗, 🍒, 🥕, 🍖).groupBy(category) = Map( \"fruits\" -&gt; List(🍓, 🍒), \"vegetables\" -&gt; List(🥒, 🥕), \"meat\" -&gt; List(🍗, 🍖))List(🍓, 🥒, 🍗, 🍒, 🥕, 🍖).grouped(2) = List( List(🍓, 🥒), List(🍗, 🍒), List(🥕, 🍖))List(🍎, 🥕, 🍌, 🧅).head = 🍎List(🍎, 🥕, 🍌, 🧅).init = List(🍎, 🥕, 🍌)List(🍎, 🥕, 🍌, 🧅).inits = List( List(🍎, 🥕, 🍌, 🧅), List(🍎, 🥕, 🍌), List(🍎, 🥕), List(🍎), List())List().isEmpty = trueList(🍎, 🥕, 🍌, 🧅).last = 🧅List(🥚, 🥔, 🥩).map(cook) = List(🍳, 🍟, 🍔)List(🧀, 🍔, 🥬).maxBy(calory) = 🍔List(🧀, 🍔, 🥬).minBy(calory) = 🥬List(🍎).nonEmpty = trueList(🍎, 🥕, 🍌, 🧅).partition(isFruit) = (List(🍎, 🍌), List(🥕, 🧅))List(🍅, 🥬, 🍞).reduce(_ + _) = 🥪List(🍅, 🍏).size = 2List(🍅, 🍏).sizeCompare(List(🧀, 🍔, 🥬)) = -1List(🍎, 🍏, 🍐, 🥕, 🍊).slice(2, 4) = List(🍐, 🥕)List(🍓, 🥒, 🍗, 🍒, 🥕, 🍖).sliding(3) = List( List(🍓, 🥒, 🍗), List(🥒, 🍗, 🍒), List(🍗, 🍒, 🥕), List(🍒, 🥕, 🍖))List(🍎, 🥕, 🍌, 🧅).span(isFruit) = (List(🍎), List(🥕, 🍌, 🧅))List(🍎, 🍏, 🍐, 🥕, 🍊).splitAt(3) = (List(🍎, 🍏, 🍐), List(🥕, 🍊))List(🍎, 🥕, 🍌, 🧅).tail = List(🥕, 🍌, 🧅)List(🍎, 🥕, 🍌, 🧅).tails = List( List(🍎, 🥕, 🍌, 🧅), List(🥕, 🍌, 🧅), List(🍌, 🧅), List(🧅), List())List(🍎, 🍏, 🍐, 🥕, 🍊).take(2) = List(🍎, 🍏)List(🍎, 🍏, 🍐, 🥕, 🍊).takeRight(2) = List(🥕, 🍊)List(🍎, 🍏, 🍐, 🥕, 🍊).takeWhile(isFruit) = List(🍎, 🍏, 🍐)List((🍎, 🥕), (🍌, 🧅)).unzip = (List(🍎, 🍌), List(🥕, 🧅))List(🍎, 🍌).zip(List(🥕, 🧅)) = List((🍎, 🥕), (🍌, 🧅))","link":"/files/2021-6-2%20Scala%20collections%20methods%20explained%20with%20food%20%F0%9F%98%8B%20134958.html"}],"posts":[{"title":"How to automatically detect banned Instagram hashtags?","text":"On Instagram, if a hashtag is often used on a publication type that violates Instagram’s usage and community guidelines, it risks being banned. The problem with these banned hashtags is that when used by a user, they can greatly decrease the engagement rate of the posts. According to some figures, on average 10% of your followers will see your posts on their feeds.Our goal today will be to see how Instagram marks its banned hashtags and how to detect them automatically with a program.Note that banned hashtag lists are regularly updated by Instagram, so it is difficult for a human to track all changes.How to identify banned hashtags as a humanBefore automating our detection we need to see how a classic user can easily spot banned hashtags.When you go on the page of a hashtag (link with the format of https://www.instagram.com/explore/tags/your_tag/), two cases can occur to you if the hashtag is banned :If you scroll to the bottom of the page this type of message may be present:The page may simply not exist:If you have thousands of hashtags on your account checking them one by one can be very tedious. We will now see how to automate the process.How to identify banned hashtags as a botMy first approach was to use Web Scrapping to check the validity of a hastag. Indeed by digging in the sources of a hashtag page we can notice that when the hashtag is banned, there is in the sources a div html tag with the class _4Kbb_ which contains the message that allows to know manually if a hashtag is banned :1234&lt;div class=\"_4Kbb_\"&gt; &lt;p class=\"_dyez\"&gt;Recent posts from # sexy are currently hidden because the community has reported some content that may not meet Instagram's community guidelines. &lt;a class=\"sqdOP yWX7d y3zKF ZIAjV \" target=\"_blank\" href=\"https://help.instagram.com/861508690592298\" tabindex=\"0\"&gt;Learn more&lt;/a&gt; &lt;/p&gt;&lt;/div&gt;The problem with this method is that it depends a lot on the Instagram sources because if the sources are updated the method has a high chance of becoming obsolete.Let’s look for a more stable method. After long research, I decided to inspect the network activity with Chrome DevTools.Bingo! I noticed that before loading the HTML page Instagram makes a GET request with the ?__a=1 parameter, to get all the information of a hashtag in the form of a JSON document :Like users, hashtags can be followed on Instagram. Banned hashtags are hashtags that a user cannot follow. I quickly saw in the JSON document the key graphql.hashtag.allow_following which has a boolean value. Knowing if a hashtag is banned is like checking the value of our key. In the case of a non-existent page, the JSON will be empty.Easily with the Python language and the Selenium library (for browser automation), we can define a function that determines if a hashtag is valid or not :123456789from selenium import webdriverimport jsondef tag_is_valid(tag): url = f\"https://www.instagram.com/explore/tags/{tag}/?__a=1\" browser = webdriver.Firefox() content = browser.find_element_by_id('json').text parsed_json = json.loads(content) return parsed_json['graphql']['hashtag']['allow_following']Easy, right? Unfortunately, there are security features that prevent this kind of request from being used so easily. That’s why I made for you a python script that can analyze and detect all the banned hashtags on the posts of an account. The sources are available at the following address:https://github.com/riiswa/instagram-hashtag-checker.To use it you just need to have Python3 on your machine, download the sources on Github, install the requirements with pip install -r requirements.txt and run the main.py script. Then you just have to follow the instructions in your terminal. Your Instagram login credentials will be required to run the program.Thank you for reading my article, and I hope you find it useful. As usual, don’t hesitate to contribute to the project or report bugs. See you soon 😄.","link":"/2020/12/29/automatically-detect-banned-Instagram-hashtags/"},{"title":"Choosing the right Scala collection (Scala 2.13)","text":"Scala has a very rich and complete collection library. Each collection has its own properties, that’s why I designed a flow-chart that will allow you to easily find the collection that fits your needs. You can visit the Interactive page or just click on the following image:Feel free to contact me to correct or improve this chart.ReferencesScala Cookbook: Recipes for Object-Oriented and Functional Programming, by Alvin Alexander.Scala documentaton.","link":"/2021/03/24/choosing-the-right-scala-collection/"},{"title":"Comment intégrer une bonne école d'ingénieurs après un DUT ?","text":"Les grandes écoles d’ingénieurs commencent de plus en plus à s’intéresser aux profils issus d’autres formations que la prestigieuse classe préparatoire aux grandes écoles. De nombreuses passerelles permettent aujourd’hui aux étudiants impliqués et motivés, qui ont fait un DUT, une licence ou un BTS d’atteindre leurs objectifs.Après avoir obtenu mon baccalauréat scientifique en 2018, deux choix s’offraient à moi pour entrer en école d’ingénieurs :La voie royale, deux années de prépas scientifiques très intensives et théoriques, avec une bonne chance d’accéder à une bonne école.Le diplôme universitaire de technologie (DUT), plus proche de ma passion pour les technologies et davantage pluridisciplinaire, mais avec très peu d’admissions dans la plupart des formations ingénieurs.Au vu du titre de l’article, vous avez sûrement deviné mon choix. Un choix que je ne regrette pas, car j’intègre l’ENSEIRB-MATMECA de l’Institut Polytechnique de Bordeaux pour la rentrée scolaire septembre 2020, à l’issue de mes deux années de DUT informatique à l’IUT de Villetaneuse. Mon expérience personnelle ainsi que celles de mes camarades me confèrent le pouvoir de divulguer les mystérieux secrets qui se cachent derrière les admissions parallèles. Même si je m’adresse ici principalement aux futurs diplômés de DUT Informatique, je pense que ces conseils peuvent s’appliquer aux personnes issues d’autres formations scientifique qui souhaitent effectuer des admissions parallèles. Cet article n’est pas le guide “ULTIME”, mais tout simplement ma vision des choses.Quelle école choisir ?Les Universités de technologies (3UT), le groupe des Institut National des sciences appliquées (INSA), le groupe INP, le réseau Polytech ou encore les écoles de l’Institut Mines-Télécom (IMT). Voici un exemple des nombreuses prestigieuses écoles qui ouvrent leurs portes aux étudiants sortant de DUT.Votre choix dépendra des spécialités proposées dans les différentes écoles et de leurs critères d’admission. Certains établissements prennent les DUT uniquement en apprentissage où ne prennent tout simplement pas de DUT, dans ce cas, si l’école vous intéresse vraiment, il est important de ne pas se censurer et de contacter directement le responsable de la formation afin d’exprimer vos plus vives motivations.Certaines écoles ont un nombre de places reversées aux DUT. Il faut noter qu’avec un diplôme “technique” vous aurez beaucoup plus de chances d’intégrer une formation ingénieur en alternance qu’une formation “classique”, une bonne solution pour gagner en expérience et en argent 🤑.Pour vos recherches, je vous recommande de demander directement conseil à vos professeurs et vos responsables de formation, de participer à des forums d’orientation et de faire des recherches sur Internet, notamment sur le site de L’Etudiant et son classement des écoles d’ingénieurs qui permet de filtrer les établissements selon plusieurs critères. Sur les fiches des écoles vous pourrez voir les critères de “Nombre d’intégrés issus de DUT” et d’”Ouverture à de nouveaux publics” qui pourront en dire long sur vos chances d’admission.Le dossier idéalMaintenant que vous avez trouvé l’école qui vous correspond, il vous faut maximiser vos chances d’être le candidat idéal en constituant un dossier atypique et solide.Résultats scolairesAvant de s’intéresser à qui vous êtes, la plupart des écoles regarderont vos notes qui en diront déjà beaucoup sur votre personnalité. Les grands établissements sont à la recherche de l’excellence académique, être le plus excellent possible augmente considérablement vos chances d’admission, même si bien évidemment, les notes ne font pas tout.Même si les écoles regarderont principalement les notes en mathématiques, en anglais et celles relatives à vos enseignements de spécialité, il est important d’avoir un bon équilibre de résultats entre toutes les matières, même celles qui vous semble les moins importantes. Ce sont souvent ces matières qui permettent aux recruteurs de faire la différence entre les dossiers. Les établissements accordent beaucoup d’importance à la culture générale et aux “soft skills” (les compétences sociales, humaines, éthiques, à l’inverse des “hard skills” qui sont les compétences purement techniques).Pour finir, le classement au sein de votre promotion (qui n’est pas déterminant) en dira beaucoup sur votre capacité à être admis dans l’école de votre choix. Un classement qui aura d’autant plus d’importance dans les petites promotions.J’estime qu’il faut être dans les 10 % de la tête de promotion pour avoir une bonne école.Motivation et projet professionnelOn ne devient pas ingénieur pour le titre ou pour s’enrichir ! Un ingénieur est un professionnel qui conçoit des produits ou des services dans le but de résoudre un problème complexe. Il est important de déterminer vos objectifs en tant qu’ingénieur, afin de montrer à l’école que vous accomplirez de grandes choses avec votre diplôme. On peut donc se poser 3 questions :Qu’est-ce qui me motive à devenir ingénieur ?Quels seront mes projets une fois ingénieur ?En quoi l’école que j’ai choisie peut m’aider à atteindre cet objectif ?Une fois vos buts fixés, il faudra les intégrer à votre lettre de motivation (demandé par la quasi-totalité des écoles). Vos profs de communication seront là pour vous guider lors de sa rédaction.Certains établissements demandent à leurs candidats des lettres de motivations manuscrites.Curriculum vitaeChaque année des centaines d’étudiants préparent le même diplôme que vous, il est donc primordial de sortir du lot et de ne pas être un simple clone. Demandé par une grande partie des écoles, le CV permet de voir votre parcours académique et professionnel, vos compétences et vos projets. Se démarquer par rapport à vos camarades sur un CV demande beaucoup d’investissement personnel :Approfondir et pousser plus loin les sujets traités en cours (qui sont en général traité en surface), afin d’ajouter une plus-value à votre dossier, par rapport à la plupart de vos camarades.Se lancer dans des projets personnels (en plus des projets scolaires) en lien avec votre projet professionnel.Trouver une alternance, des stages ou des jobs en lien avec votre projet professionnel.Les activités extra-scolaires sont importantes à ajouter, car elle montrent votre potentiel à vous investir dans la vie associative des écoles qui est souvent assez développée.Une expérience professionnelle réalisée dans un laboratoire ou une entreprise affiliée à l’école que vous souhaitez peut apporter beaucoup de valeur à votre dossier.Lettre de recommandationDemandé par certaines écoles, il est important de munir votre dossier d’une lettre de recommandation (celle d’un professeur ou d’un tuteur de stage par exemple). Pour les DUT Informatique, il y a un avis de poursuites d’études qui fait office de lettre de recommandation.Bien se préparerComme dit précédemment vous serez généralement présélectionnés par les écoles par rapport à votre dossier qui contiendra généralement les relevés de notes du Baccalauréat, les relevés de notes de vos 3 derniers semestres dans l’enseignement supérieur, une lettre de motivation, un CV et des pièces d’identité. Il y a très peu de place et vous serez souvent en concurrence avec toutes les licences et les IUT de France.Après la présélection, les admissions parallèles se font souvent par entretien de motivation, où vous devrez exprimer votre volonté à intégrer l’école et votre aptitude à pouvoir réussir. Certaines écoles font des tests de personnalité ou des tests académiques pendant l’entretien. L’entretien est décisif, il est donc important de bien se préparer et de faire des simulations. Pour savoir à quoi vous attendre, n’hésitez pas à contacter les étudiants qui sont passés par là avant vous.Les épreuves écrites sont assez rares pour les admissions parallèles, les 3UT demandent par exemple une rédaction pendant l’entretien.Les alternatives en cas d’échecJ’espère que vous n’aurez pas à lire ce passage, mais si vous n’avez pas réussi à obtenir l’école de vos rêves, ne désespérez pas, car il vous sera quand même possible d’intégrer votre école d’ingénieur :Les DUT ont souvent des passerelles vers une 3e année de licence classique, il est donc possible d’intégrer une école après une L3, sur dossier comme pour les DUT ou par concours (concours CASTing, le concours Pass’Ingénieur ou encore le concours GEI-UNIV).Les prépas ATS (adaptation technicien supérieur) préparent en 1 an les titulaires de BTS, BTSA ou DUT scientifiques à intégrer une école d’ingénieurs via le concours ENSEA ou sur dossier.On arrive enfin à la fin de cet article qui sera peut-être bientôt obsolète avec la transformation du DUT en BUT, mais comme dit précédemment cet article peut s’appliquer à tout étudiant souhaitant intégrer une formation en admission parallèle. Finalement, n’hésitez pas à me contacter si vous avez des questions ou si vous souhaitez compléter cet article.Je vous souhaite des années à venir florissante de promesses et de succès 💖.","link":"/2020/09/03/comment_integrer_une_bonne_ecole_dingenieurs_apres_un_DUT/"},{"title":"Deploying Scala.js app on Github Pages with Travis CI","text":"Today we are going to use Travis CI (free for an open-source repository) to deploy continuously a Scala.js app on Github pages. All your commit on the master branch put your static files on a gh-pages branch once the test is validated.Scala.js is a compiler that compiles Scala source code to equivalent Javascript code.Li Haoyi : http://www.lihaoyi.com/hands-on-scala-js/Travis CI is a hosted continuous integration service used to build and test software projects hosted at GitHub.Wikipedia : https://en.wikipedia.org/wiki/Travis_CIPrerequisitesBefore following this tutorial, you need to download and install sbt and Node.js, and have an Github account.Create the projectRun the following command:1sbt new scala/hello-world.g8, and enter a name for your project. This creates a Scala project from the “hello-world” template.Setup Scala.jsIf you want to start from scratch without Scala.js project you can do this step.Create the file project/plugins.sbt, and add the following line to adding the Scala.js sbt plugin:1addSbtPlugin(\"org.scala-js\" % \"sbt-scalajs\" % \"0.6.29\")We also setup basic project settings and enable this plugin in the sbt build file. Add this following line in the build.sbt (in the project root directory) :12enablePlugins(ScalaJSPlugin)scalaJSUseMainModuleInitializer := trueTo run this, simply launch sbt and invoke the run task:1234567$ sbt run[info] Compilation completed in 9.96s.[info] Done compiling.[info] Fast optimizing D:\\drafs\\scala.js-travis-ci\\scala-travis\\target\\scala-2.13\\hello-world-fastopt.js[info] Running MainHello, World![success] (...)The run task creates the hello-world-fastopt.js in target\\scala-2.13\\ directory. Remember the name of the file for later.Integrating with HTMLTo load and launch the created JavaScript, you will need an HTML file.Create the folder source in the root directory of your project. You will put all your sources files (html, image, script, style) in this folder.Create the file source/index.html with the following content.1234567891011121314&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Scala.js App&lt;/title&gt;&lt;/head&gt;&lt;body&gt; &lt;!-- Include Scala.js compiled code --&gt; &lt;script type=\"text/javascript\" src=\"js/hello-world-fastopt.js\"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;Create the Github repositoryAdd .gitignore file in the root folder of your project, with the following content:123456789101112*.class*.log.cache/.history/.lib/dist/*target/lib_managed/src_managed/project/boot/project/plugins/project/And follow this tutorial to add an existing project to GitHub using the command line. Your repository should be public if you want to use Travis CI for free.Setup Travis CIIn this part, I use the free version of Travis CI.First, you need to add Travis CI application to your Github account.Generate a new token with repo scopes. Remember the token value for later.Go to Applications settings, and configure Travis CI to have access to the repository. You’ll be redirected to the Travis page.On the Travis page, go to your repository’s setting. Under Environment Variables, put GH_TOKEN as name and paste the token onto value. Click Add to save it.Earlier we created the source folder to place the static files of our app in it. To generate static files Travis CI copies the content of a public folder to the root of a project and commits it to the gh-pages branch. We will create a script to move our static files to a public folder.Add and commit deploy.sh file to your repository to generate static files on Travis CI with the following content:1234567891011121314if [ ! -d \"public\" ]; then mkdir publicficp -fr source/* public/if [ ! -d \"public/js\" ]; then mkdir public/jsfi# Generate .js files from Scalasbt fastOptJScp target/scala-*/*.js public/js/Add and commit .travis.yml file to your repository to configure Travis CI with the following content:123456789101112131415161718language: scalajdk: openjdk8scala: - 2.12.10 # scala version branches: only: - master # build master branch onlyscript: - bash deploy.sh # generate static filesdeploy: provider: pages skip-cleanup: true github-token: $GH_TOKEN keep-history: true on: branch: master local-dir: publicOnce Travis CI finish the deployment, the generated pages can be found in the gh-pages branch of your repository.Your Scala.js App is deployed on Github Pages !In your GitHub repository setting, navigate to “GitHub Pages” section and change Source to gh-pages branch.Congratulations! Your Scala.js app is ready and available at username.github.io/repository-name. The Scala code:123object Main extends App { println(\"Hello, World!\")}a well executed (see console).You can find all the source code used in this tutorial here.To go furtherYou will go further in your projects than a simple “Hello World”. For more information on Scala.js, I invite you to consult the official documentation.Sources:https://www.scala-js.org/doc/tutorial/basic/index.htmlhttps://docs.travis-ci.com/user/languages/scala/https://docs.travis-ci.com/user/deployment/pages/","link":"/2019/11/08/deploying-scala-js-app-on-github-pages-with-travis-ci/"},{"title":"Hello World !","text":"Welcome to the launch of my new and 1st website! My name is Waris Radji and I’m so excited to share with you my knowledge! The amount of ideas, how-to’s and inspiration whirling around in my head is ready to jump out.Where can I find information about you?For additional information about me and why I am writing this blog, I encourage you to go to the about page. But to summarize, I will mainly write articles about my passions, Scala programming, Data Science and Street Lifting to cite some examples.How can I get involved?Feel free to take part in my journey by suggesting ideas for articles and even writing articles on my blog yourself, it will be a pleasure! Comments, donations, and sharing are also welcome!How can I be informed?To keep you informed of my future posts I invite you to follow me on my social networks (on the left) and even better on my newsletter (on the right) where you’ll be informed each week of my latest posts. Subscribers to my newsletter will be able to receive small gifts! Keep a close eye on your mailbox.","link":"/2019/10/31/hello/"},{"title":"Making art with Scala & Processing","text":"During my long periods of confinement, I got the idea of exploring new innovative areas of computer science. I really love the procedural generation and mixing it with art to be able to extend the creativity to infinity. I then discovered the Creative Coding that meets my expectations. I wish today to help you to get started with the creative coding with Scala and the Java library Processing.Creative coding is a type of computer programming in which the goal is to create something expressive instead of something functional. It is used to create live visuals and for VJing, as well as creating visual art and design, entertainment, art installations, projections and projection mapping, sound art, advertising, product prototypes, and much more.From Wikipedia, the free encyclopediaProcessingProcessing is a software sketchbook and a language for creating visual arts with programming.Processing is written in Java, so we can write our programs directly from Scala without going through the PDE. It’s possible thanks to the Processing Core dependency that we have to add in your build.sbt (if you work with the sbt build tool).12// https://mvnrepository.com/artifact/org.processing/corelibraryDependencies += \"org.processing\" % \"core\" % \"3.3.6\"For our first time with Processing, we are going to creates a simple application that create balls (with physics), when the user clicks on his screen.Minimal codeTo start, this is a minimal example of an empty Processing application in Scala:12345678import processing.core.PAppletobject EmptySketch extends PApplet { def main(args: Array[String]): Unit = { val processingArgs = Array(\"EmptySketch\") PApplet.runSketch(processingArgs, this) }}PApplet is a class defined in the Processing Core library and is the base class for all sketches that use processing.core. This class implements a lot of methods and constants needed for image processing and user interaction. In the main, we use the runSketch static method who opens a window to display the sketch and take two arguments, an array of arguments (like the name of the window) and the sketch to be displayed.The Ball classAs I’m not here to teach you programming, I guess you already have the necessary Scala notions to follow this article, so here’s the code for the class Ball :1234567891011121314151617181920212223case class Ball(sketch: PApplet, x: Float, y: Float, size: Float, xSpeed: Float, ySpeed: Float) { def next: Ball = { val newX = x + xSpeed val newY = y + ySpeed Ball(sketch, newX, newY, size, if (newX &lt; 0 || newX &gt; sketch.width) -xSpeed else xSpeed, if (newY &lt; 0 || newY &gt; sketch.height) -ySpeed else ySpeed) } def render(): Unit = { sketch.fill(size, 127) sketch.ellipse(x, y, size, size) }}In the constructor of Ball, there is an unexpected parameter: sketch: PApplet. This parameter allows a ball to access the method who are defined in a PApplet, for example, the methods for rendering the data. The next method simply return a new Ball with updated coordinates and speed (for the bouncing). The render() method calls the sketch methods to draw a ball in the sketch. As you may have guessed the fill method is used to choose a color, and the ellipse method draws an ellipse from his center and his width and height.The applicationNow that we’ve got a ball, we can really start. I remind you of the objective, which is to create a simple application that creates balls (with physics) when the user clicks on his screen. This is the code for the application :12345678910111213141516171819202122232425262728293031object BallApp extends PApplet { private val balls: ArrayBuffer[Ball] = ArrayBuffer.empty[Ball] override def settings(): Unit = { size(500, 500) balls += Ball(this, width / 2, height / 2, random(10, 100), random(-10, 10), random(-10, 10)) } override def draw(): Unit = { background(255) balls.transform(_.next).foreach(_.render()) } override def mouseClicked(): Unit = balls += Ball(this, mouseX, mouseY, random(10, 100), random(-10, 10), random(-10, 10)) def main(args: Array[String]): Unit = { val processingArgs = Array(\"Ball App\") PApplet.runSketch(processingArgs, this) }}The balls attribute is used to store the balls of the application. The methods settings, draw, and mouseClicked are defined in the PApplet class:settings(): Defines the actions that will be called at the launching of the application. Here, I choose a screen size and I put my first ball in the application.draw(): Continuously executes the lines of code contained inside its block until the program is stopped or noLoop() is called. Here, I update the coordinates of the balls and I render them.mouseClicked(): Defines the actions that will be called when a user clicks on his mouse. Here, I create and put a new ball in the application.The application is now ready to use. This is what I obtain after some clicks:Your browser does not support the video tag.This was a simple introduction to Creative Coding on my blog, expect to see many more articles on this subject in the coming days. To learn how to use Processing I invite you to follow theses official’s tutorials. I created a Github repository where I would put all my creations with Processing and Scala. Thanks to Happy Coding’s article which inspired me a lot.","link":"/2020/03/25/making-art-with-scala-processing/"},{"title":"Automatic & Targeted Instagram Mass Story Viewer","text":"Instagram influencers discovered a new way to increase their number of followers. This technique is called mass story viewing (or mass story looking). Have you ever seen Russian Instagram accounts with thousands of followers watching your insignificant stories?This method has become popular because contrary to follow-unfollow or spam comments, mass looking is not known to be very sanctioned by Instagram (Instagram can suspend or delete your account if there are suspicious activities).A real business has emerged around the mass story viewing. For example, I’ve seen a site that offers mass looking services for $155 per month. It’s very expensive and not accessible for everyone.Today we will see how to write a cheap (free) and accessible script for everyone (you still need to know how to program) using Python3 and its instabot library.User targetingBefore start, you need to connect instabot to your Instagram account with :123import instabotbot = instabot.Bot()bot.login(username=YOUR_USERNAME, password=YOUR_PASSWORD)Our first goal is to obtain a list of users who might potentially be interested in our content. There are many filter to target users on Instagram :by location:1bot.get_geotag_users(LOCATION)by hashtag:1bot.get_hashtag_users(HASHTAG)by a user followers:1bot.get_user_followers(USER_ID)All these methods return a list of the user ids targeted by the filter.Story viewinginstabot really makes story viewing easier with the method bot.watch_users_reels(USER_ID), which takes a user id as a parameter and returns a boolean that represents the success of the viewing.It’s therefore very easy to combine user targeting with story viewing taking the hashtag filter:12for id in bot.get_hashtag_users(\"hashtag\"): bot.watch_users_reels(id)I’ve written a complete script to target users for a clothing store, with a cool console display to impress your friend :12345678910111213141516171819202122232425262728293031323334353637383940import instabotimport timefrom os import system, name def clear(): if name == 'nt': _ = system('cls') else: _ = system('clear') HASHTAGS = ['fashion', 'style', \"model\", \"shopping\", \"dress\"]SLEEP_TIME_BETWEEN_MAIN_LOOP = 5 * 60SLEEP_TIME_BETWEEN_HASHTAG_LOOP = 60USERNAME = YOUR_USERNAMEPASSWORD = YOUR_PASSWORDbot = instabot.Bot()bot.login(username=USERNAME, password=PASSWORD)# MAIN LOOPwhile True: try: for hashtag in HASHTAGS : clear() # GET USERS FROM HASHTAG users = bot.get_hashtag_users(hashtag) for id in users: # WATCH USER STORIES if bot.watch_users_reels(id): bot.logger.info(f'Instagram user: {id}, Total stories viewed: {bot.total[\"stories_viewed\"]}') bot.logger.info(f'Sleeping for {SLEEP_TIME_BETWEEN_HASHTAG_LOOP} seconds...') time.sleep(SLEEP_TIME_BETWEEN_HASHTAG_LOOP) bot.logger.info(f'Sleeping for {SLEEP_TIME_BETWEEN_MAIN_LOOP} seconds...') time.sleep(SLEEP_TIME_BETWEEN_MAIN_LOOP) except Exception as e: bot.logger.info(e) time.sleep(SLEEP_TIME_BETWEEN_MAIN_LOOP)It’s a script that can run on a machine 24 hours a day, 7 days a week, to watch thousands upon thousands of stories and has rest periods to avoid detection of suspicious activity by Instagram. You can also use a proxy to avoid problems with your account.Very short article but I hope that it can save people from spending their money on mass looking through overpriced services…","link":"/2020/02/11/mass-story-viewer/"},{"title":"Road to project success with Git: An Another Git Workflow","text":"Git is for a long time my favorite version-control system. I use it in almost all of my projects, and I really can’t do without it. Today, I would like to share with you my way of managing projects with this excellent tool. Git is easy to use but can be extremely powerful when used properly.Based on my different experiences (Freelance work, school project, hackathon…), this article is for people who already have the basics of Git. I invite complete beginners to read this excellent article written by Anne Bonner. For more details about commands, I invite you to read the Git Reference Manual.Before introducing my Git workflow, let me define five rules:The main branch for development is the branch called developThe project must be divided into as many features as possible, so there will be ONE branch per feature.Avoid unnecessary new commits (which does not add new features)Branches for adding new features have the suffix feature/ and branches for fixing and patches have the suffix fix/.Do not merge directly into develop, the merge of a feature must usually be done by a developer of the team, so you have to make a pull request.Now that the rules have been defined here is my workflow:The use of this cycle will ensure good management of your project. Contact me if you have any suggestions, I would be happy to improve my model.","link":"/2020/11/04/my-git-workflow/"},{"title":"Name color from its RGB value","text":"Today we’re going to see how supervized learning model can help a machine to name color from its RGB value. The programming language used for the solution is Python.As you probably know, a color image is made up of pixels. Each pixel has a triplet value representing the values of red green and blue (RGB).Examples:RGB value red=250, green=128, blue=114, give:RGB value red=0, green=255, blue=255, give:Our human eye allows us to perceive and identify colors, and to say that the color seen above corresponds to pink or blue, but how the machine should know this with simple RGB value?When a human sees a color that is close to pure red, he will deduce that this color is red (I apologize for the colorblindness). Giving this behavior to a machine is simple: if I give him an RGB value (unnamed color), the machine can compare this color to colors already named, by finding the nearest color. It can deduce from this that the name of the unnamed color is the same that the name of the nearest color that it has found.Gathering data from sourcesThe first step before building the model is gathering data from sources. To the day I write this article CSS support 147 colors names, we can find the list of colors name on this website: https://www.rapidtables.com/web/css/css-color.html. On this website, each color is represented by his name and his RGB value.I created a small Python script that allows me to retrieve this data from the website. This article does not deal with Web scrapping, for more information about this, I invite you to read the official documentation of Beautifulsoup (the library that I use to collect data from the web page). You will find however the script I used to collect data, and you can also download the generated CSV file here.12345678910111213141516171819202122from bs4 import BeautifulSoupimport requestsimport jsondef parse_rgb(s): return s[3:][1:-1].replace('.', ',')def html_to_color(html): td_tags = html.find_all('td') return td_tags[1].text + ',' + parse_rgb(td_tags[3].text)req = requests.get('https://www.rapidtables.com/web/css/css-color.html')soup = BeautifulSoup(req.text, 'html')data = [html_to_color(line) for line in soup.find_all('tr') if not line.find('th') and len(line.find_all('td')) == 4]with open('colors.csv', 'w') as f: f.write('color_name,red,green,blue\\n' + '\\n'.join(data))Load and visualize dataNamed colors are now in the colors.csv file. pandas python library allows loading data from CSV to data frame with the read_csv function.123import pandas as pddf = pd.read_csv(\"colors.csv\")Display the 5 fist line of the data frame with df.head(5):Each color has a name and RGB value with a unique ID.An RGB value can be seen as a point (between 0 and 255) in a 3-dimensional space. To see this, we can use the Matplotlib data visualization library to represented on a 3D scatter plot each point of the data frame with his real color and with RGB value as axis.1234567891011121314151617181920212223242526from mpl_toolkits.mplot3d import Axes3D import matplotlib.pyplot as pltimport numpy as npfig = plt.figure(figsize=(15, 12))ax = fig.add_subplot(111, projection='3d')red_values = df.red.valuesgreen_values = df.green.valuesblue_values = df.blue.valuesfor i in range(len(red_values)): ax.scatter(red_values[i], green_values[i], blue_values[i], color=[(red_values[i] / 255, green_values[i] / 255, blue_values[i] / 255)], s=70) ax.set_xlabel('red')ax.set_ylabel('green')ax.set_zlabel('blue')ax.set_xticks([0, 85, 170, 255])ax.set_yticks([0, 85, 170, 255])ax.set_zticks([0, 85, 170, 255])plt.show()Choose the most appropriate modelThe last step before building a model is to choose which is the most appropriate to solve the problem. The goal is to give a name for an unnamed color finding the closest named color, what we can see as points in 3-dimensional space. We can also see each named colors as a unique category. Classification is the problem of identifying to which of a set categories a new observation belongs. For this problem, a category is a named color and unnamed colors are the new observations.The k-nearest neighbors (k-NN) algorithm perfectly match with the problem (find the closest point). k-NN is a supervised algorithm that stores all the available cases and classifies the new data or case based on a similarity measure. It is mostly used to classifies a data point based on how its neighbors are classified.In the classification phase, $k$ is a user-defined constant, and an unlabeled vector (a query or test point) is classified by assigning the label which is most frequent among the $k$ training samples nearest to that query point. If $k=1$, then the object is simply assigned to the class of that single nearest neighbor.Train the modelThe Python scikit-learn library implements the k-nearest neighbors for classification via the sklearn.neighbors.KNeighborsClassifier class. There are many parameters in this class but the only one that will interest us today is n_neighbors which represents the $k$ parameter and that we will set to 1.It is also necessary to retrieve the RGB values (X) from the data frame defined above, and the ID (y) of each color that will be the class to predict. These values will represent the training set.1234567from sklearn.neighbors import KNeighborsClassifierX = df[['red', 'green', 'blue']].valuesy = df.index.valuesmodel = KNeighborsClassifier(n_neighbors=1)model.fit(X, y)Use the model to name colorNow that the model has been trained it is possible to name new colors. I have created a function that takes as a parameter a triplet that represents a RGB value, and returns the name of that color. Simply call the predict method of the model which will take the tuple as a parameter, and return an ID from the data frame. Finally, we can ask the data frame to provide us with the name associated with the ID.12def name_color(rgb): return df.color_name[model.predict([rgb])].values[0]Examples:name_color((18, 47, 133)) give midnightbluename_color((102, 158, 30)) give olivedrabname_color((221, 145, 35)) give goldenrodConclusionWe have seen how supervised learning can help a machine to name colors from its RGB value. To make the model more accurate you can add new named colors to the training set. You can also have fun via this link http://www.darkart.com/cgi-bin/colors.cgi giving names to randomly generated colors. Soon I will be writing an article on unsupervised learning and color. In the meantime, thank you for reading this article, see you later!","link":"/2019/11/29/name-color-from-its-rgb-value/"},{"title":"A new way to interact with others Streetlifters, the r/streetliftingathletes.","text":"Repost of https://www.instagram.com/p/CJq8Wfgr-TV/The subreddit https://www.reddit.com/r/streetliftingathletes/:It’s a small step for man, but a giant step for the Streetlifting community.”I am pleased to announce the opening of our new community on Reddit. A place where we can all develop our discipline and have real discussions.Every major sport has an official subreddit, why not us?I invite you to read the slides attentively to prepare yourself for this new adventure.The success of this project will depend on your investment, I count on you to spread it as much as possible.","link":"/2021/01/12/r-streetlifting-athletes/"},{"title":"Scala collections methods explained using food 😋","text":"In Scala there are not only map, filter, and reduce methods, Scala collections classes come with dozens of very useful pre-built methods. So what better way to illustrate these methods with tasty food? Note that the examples are fictitious, enjoy your meal!Naturally, any suggestions are welcome 😉.","link":"/2021/06/04/scala-collections-methods-explained-using-food/"},{"title":"Using Matplotlib with Scala on Jupyter Notebook (and more...)","text":"Data visualization is very important in the life of a data scientist. It helps him to explore data more intuitively than thousands of digital values and to communicate his ideas. Notebooks are very appreciative by data scientist because it ensures a perfect fusion between programming codes, data visualization, and explanatory texts.The Scala programming language is commonly used for Data engineering (building and maintaining data infrastructure) contrary to languages like Python and R used for Data Science (data processing and analysis). Even if is possible to do Data science with Scala (e.g. Spark MLLIB or Smile), it’s logic there are fewer data visualization libraries than in Python.When I search on Google for “data visualization Scala”, I very quickly find Vegas - The Missing Matplotlib for Scala.Hm… the first thing I see is “The Missing Matplotlib”? Even if Vegas is an excellent library and fits well with the functional part of Scala, the real Matplotlib offers more options, more documentation, and more community support than Vegas. What if I told you that you can directly use the real Matplotlib library with Scala.Note: The solution I will present to you below does not represent THE solution. You can use Scala libraries directly in your notebooks, but I am addressing here people who are familiar (like me) with using Matplotlib, but who prefer to do their processing with Scala.BeakerX - Extensions for Jupyter NotebookBeakerX is a collection of kernels and extensions to the Jupyter interactive computing environment. It provides JVM support, Spark cluster support, polyglot programming, interactive plots, tables, forms, publishing, and more.What will allow us to use Matplotlib with Scala today is BeakerX’s autotranslation functionality. This feature allowing you to access multiple languages in the same notebook (included Scala) and seamlessly communicate between them.The first step will be to install BeakerX (you need to have Jupyter Notebook before). Follow this link to see how to install it.When you create a new notebook, thanks to BeakerX, you will have a wider choice of kernels, make sure to choose the “Scala” option.To illustrate an example with Matplotlib, I will first create tables containing the states of the cosine and sine functions with Scala:12345import scala.math.{Pi, sin, cos}val x = 0.0 to 1.0 by 0.01val ySin = x.map(v =&gt; sin(v*Pi*5))val yCos = x.map(v =&gt; cos(v*Pi*5))The goal is now to transfer and autotranslate the Scala data to Python. For that, it is necessary to use the global object beakerx and assign to this the values:123beakerx.x = xbeakerx.y_sin = ySinbeakerx.y_cos = yCosNote: The values assigned to the beakerx object should only be some AnyVal of the Scala standard lib (Int, Float, Char, Double…) and collections (Map, List, Seq, Set, Range…) to ensure the success of autotranslation.Now that the data have been defined, it is Python’s turn to do the visualization. Just import the beakerx object into python with from beakerx.object import beakerx, and you will be able to access the attributes previously assigned. The magic %%python allows you to switch language:12345678%%pythonfrom beakerx.object import beakerximport numpy as npimport matplotlib.pyplot as pltfig, ax = plt.subplots()ax.plot(beakerx.x, beakerx.y_sin)ax.plot(beakerx.x, beakerx.y_cos)This is what the final result should look like:To go much furtherToday I used as an example Matplotlib, but it is possible to do the same with any Python library. Even better, it is possible not to limit yourself only to the Scala language, BeakerX supports also Groovy, Clojure, Kotlin, Java, JavaScript and SQL, and autotranslation works between all these languages. I think it’s a shame that BeakerX doesn’t support the R language.To switch between languages, you just have to use the magic %%languageName at the beginning of the cell concerned.","link":"/2019/12/14/using-scala-with-matplotlib/"}],"tags":[{"name":"instagram","slug":"instagram","link":"/tags/instagram/"},{"name":"automation","slug":"automation","link":"/tags/automation/"},{"name":"bot","slug":"bot","link":"/tags/bot/"},{"name":"python","slug":"python","link":"/tags/python/"},{"name":"social network","slug":"social-network","link":"/tags/social-network/"},{"name":"growth hacking","slug":"growth-hacking","link":"/tags/growth-hacking/"},{"name":"scala","slug":"scala","link":"/tags/scala/"},{"name":"scala-collection","slug":"scala-collection","link":"/tags/scala-collection/"},{"name":"guide","slug":"guide","link":"/tags/guide/"},{"name":"education","slug":"education","link":"/tags/education/"},{"name":"school","slug":"school","link":"/tags/school/"},{"name":"engineer","slug":"engineer","link":"/tags/engineer/"},{"name":"degree","slug":"degree","link":"/tags/degree/"},{"name":"graduation","slug":"graduation","link":"/tags/graduation/"},{"name":"success","slug":"success","link":"/tags/success/"},{"name":"scala.js","slug":"scala-js","link":"/tags/scala-js/"},{"name":"github pages","slug":"github-pages","link":"/tags/github-pages/"},{"name":"travis ci","slug":"travis-ci","link":"/tags/travis-ci/"},{"name":"tutorial","slug":"tutorial","link":"/tags/tutorial/"},{"name":"javascript","slug":"javascript","link":"/tags/javascript/"},{"name":"web","slug":"web","link":"/tags/web/"},{"name":"git","slug":"git","link":"/tags/git/"},{"name":"about me","slug":"about-me","link":"/tags/about-me/"},{"name":"waris radji","slug":"waris-radji","link":"/tags/waris-radji/"},{"name":"creative coding","slug":"creative-coding","link":"/tags/creative-coding/"},{"name":"processing","slug":"processing","link":"/tags/processing/"},{"name":"art","slug":"art","link":"/tags/art/"},{"name":"mass story viewer","slug":"mass-story-viewer","link":"/tags/mass-story-viewer/"},{"name":"mass looking","slug":"mass-looking","link":"/tags/mass-looking/"},{"name":"management","slug":"management","link":"/tags/management/"},{"name":"project","slug":"project","link":"/tags/project/"},{"name":"machine learning","slug":"machine-learning","link":"/tags/machine-learning/"},{"name":"data science","slug":"data-science","link":"/tags/data-science/"},{"name":"color","slug":"color","link":"/tags/color/"},{"name":"k nearest neighbors","slug":"k-nearest-neighbors","link":"/tags/k-nearest-neighbors/"},{"name":"data visualization","slug":"data-visualization","link":"/tags/data-visualization/"},{"name":"classification","slug":"classification","link":"/tags/classification/"},{"name":"weighted calisthenics","slug":"weighted-calisthenics","link":"/tags/weighted-calisthenics/"},{"name":"streetlifting","slug":"streetlifting","link":"/tags/streetlifting/"},{"name":"reddit","slug":"reddit","link":"/tags/reddit/"},{"name":"food","slug":"food","link":"/tags/food/"},{"name":"matplotlib","slug":"matplotlib","link":"/tags/matplotlib/"},{"name":"jupyter notebook","slug":"jupyter-notebook","link":"/tags/jupyter-notebook/"}],"categories":[{"name":"Programming","slug":"Programming","link":"/categories/Programming/"},{"name":"Education","slug":"Education","link":"/categories/Education/"},{"name":"Creative Coding","slug":"Creative-Coding","link":"/categories/Creative-Coding/"},{"name":"Data Science","slug":"Data-Science","link":"/categories/Data-Science/"},{"name":"Sports","slug":"Sports","link":"/categories/Sports/"}]}